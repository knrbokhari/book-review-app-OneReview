generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model AuthUser {
  id       String @id @default(uuid())
  username String @unique
  email    String @unique
  password String // hashed password

  role       String
  isVerified Boolean @default(false)
  isActive   Boolean @default(true)
  isDeleted  Boolean @default(false)

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  user       User?
  history    LoginHistory[]
  validation Validation[]
}

model LoginHistory {
  id         String   @id @default(uuid())
  authUser   AuthUser @relation(fields: [authUserId], references: [id])
  authUserId String   @unique
  ipAddress  String
  userAgent  String
  attempt    String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Validation {
  id         String    @id @default(uuid())
  authUser   AuthUser  @relation(fields: [authUserId], references: [id])
  authUserId String    @unique
  code       String
  type       String
  otpExpiry  DateTime? // expiry time for OTP
  isUsed     Boolean   @default(false)
  isExpired  Boolean   @default(false)

  issuedAt   DateTime  @default(now())
  verifiedAt DateTime?
}

model User {
  id              String   @id @default(uuid())
  authUser        AuthUser @relation(fields: [authUserId], references: [id])
  authUserId      String   @unique
  profileImageUrl String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
